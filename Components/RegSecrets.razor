@using secretsVaul.Models
@using secretsVaul.Services
@inject ISecretService SS
@inject IJSRuntime JS

<style>
    *{
        transition: all .500ms;
    }
</style>
<form class="form" @onsubmit="handleSubmit">
    @if(showForm){
    <label for="title">Titulo</label>
    <input @bind-value="newSecret.Title" class="form-control" type="text" name="title" id="title">
    <label for="value">Valor</label>
    <input @bind-value="newSecret.Value" class="form-control" type="number" name="value" id="value">
    <label for="date">Fecha</label>
    <input @bind-value="newSecret.Date" class="form-control" type="date" name="date" id="date">
    <label for="place">Lugar</label>
    <input @bind-value="newSecret.Place" class="form-control" type="text" name="place" id="place">
    <span>
        <label for="lat">Latitud</label>
        <input @bind-value="coord.Latitude" class="form-control" type="text" name="lat" id="lat">
        <label for="lng">Longitud</label>
        <input @bind-value="coord.Longitude" class="form-control" type="text" name="lng" id="lng">
    </span>
    <label for="description">Descripcion</label>
    <textarea @bind="newSecret.Description" class="form-control" name="description" id="description" cols="30" rows="5"></textarea>
    <input class="btn btn-primary mt-4" type="submit" value="Agregar">
    }
    <button type="button" @onclick="ToggleForm" class="@btnClass" >@btnTxt</button>
</form>

<Toast Message="Secreto agregado Correctamente" Title="Secreto" Delay=3000 />

@code {
    [Parameter]
    public Guid idUser {get; set;}

    private string btnTxt = "Mostrar";
    private string btnClass = "btn btn-info mt-4";
    private bool showForm = false;

    Secret newSecret = new Secret{
        Id = Guid.NewGuid(),
        Date = DateTime.Today
    };
    Coord coord = new Coord{
        Id = Guid.NewGuid()
    };
    
    private void ToggleForm(){
        showForm = !showForm;
        if(showForm){
            btnTxt = "Ocultar";
            btnClass = "btn btn-warning mt-4";
        }else{
            btnTxt = "Mostrar";
            btnClass = "btn btn-info mt-4";
        }
    }
     protected override void OnParametersSet(){
         if(idUser != null){
            newSecret.UserId = idUser;
            coord.SecretId = newSecret.Id;
         }
         StateHasChanged(); 
     }

    private async Task handleSubmit(){
        newSecret.Coordinate = coord;
        bool status =  await SS.AddSecret(newSecret);
        if(status){
            newSecret = new Secret{
            Id = Guid.NewGuid()
            };
            coord = new Coord{
            Id = Guid.NewGuid()
            };
        }
        await JS.InvokeVoidAsync("ShowToast");
        ToggleForm();
     }
}
