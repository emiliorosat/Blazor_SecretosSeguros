@using Models
@using secretsVaul.Services
@using secretsVaul.Components
@inject ISecretService SS

<table class="table">
    <thead class="thead-dark">
        <th>Titulo</th>
        <th>Fecha</th>
        <th>Lugar</th>
        <th>Ver Detalles</th>
    </thead>
    <tbody>
        @foreach (Secret s in secrets)
        {
            <tr>
                <td>@s.Title</td>
                <td>@s.Date</td>
                <td>@s.Place</td>
                <td>
                    <button @onclick="()=>OpenDetailsSecret(s)" data-toggle="modal" 
        data-target="#modalSecret" class="btn btn-link" >Ver Detalles</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<Modal Title="Secreto" Id="modalSecret">
    <div>
        <p><b>Titulo: </b>@modalSecret.Title</p>
        <p><b>Fecha: </b>@modalSecret.Date</p>
        <p><b>Valor: </b>@modalSecret.Value</p>
        <p><b>Lugar: </b>@modalSecret.Place</p>
        @if(modalCoord != null){
        <b>Coordenadas</b>
        <p><b>Latidud: </b>@modalCoord.Latitude<b> Longitud: </b>@modalCoord.Longitude</p>
        }
        <p><b>Descripcion: <br/></b>@modalSecret.Description</p>
    </div>
</Modal>

@code {
    [Parameter]
    public Guid Uid {get; set;}

    List<Secret> secrets = new List<Secret>();
    Secret modalSecret = new Secret();
    Coord modalCoord;

    protected override async void OnParametersSet(){
        secrets = await SS.GetAllMySecret(Uid);
    }

    private async Task OpenDetailsSecret(Secret s){
        modalSecret = s;
        modalCoord = await SS.GetCoord(s.Id);
    }
}